version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.prod.Dockerfile
    ports:
      - '${FRONTEND_PORT:-80}:3000'
    environment:
      - NODE_ENV=production
    networks:
      - bloop-network
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: docker/backend.prod.Dockerfile
    ports:
      - '${BACKEND_PORT:-3001}:3001'
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres
      - REDIS_URL=${REDIS_URL}
      - BASE_SCRAPE_URL=${BASE_SCRAPE_URL}
      - HOST=0.0.0.0
      - PORT=${PORT:-3001}
      - AUTH_SECRET=${AUTH_SECRET}
      - CRON_SERVICE_ENABLED=${CRON_SERVICE_ENABLED:-true}
      - CRON_SERVICE_FREQUENCY=${CRON_SERVICE_FREQUENCY}
    networks:
      - bloop-network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - bloop_db_data:/var/lib/postgresql/data
    networks:
      - bloop-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - '${REDIS_PORT:-6379}:6379'
    networks:
      - bloop-network
    restart: unless-stopped

volumes:
  bloop_db_data:

networks:
  bloop-network:
    driver: bridge
