version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    ports:
      - '${FRONTEND_PORT:-3000}:3000'
    volumes:
      - ./apps/frontend:/app/apps/frontend
      - ./packages/shared-types:/app/packages/shared-types
      - ./packages/database:/app/packages/database
      - /app/apps/frontend/node_modules
      - /app/packages/shared-types/node_modules
      - /app/packages/database/node_modules
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - NUXT_PUBLIC_BACKEND_URL=${NUXT_PUBLIC_BACKEND_URL:-http://localhost:3001}
    networks:
      - dev-network
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    ports:
      - '${PORT:-3001}:3001'
    volumes:
      - ./apps/backend:/app/apps/backend
      - ./packages/shared-types:/app/packages/shared-types
      - ./packages/database:/app/packages/database
      - /app/apps/backend/node_modules
      - /app/packages/shared-types/node_modules
      - /app/packages/database/node_modules
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - BASE_SCRAPE_URL=${BASE_SCRAPE_URL}
      - HOST=${HOST:-localhost}
      - PORT=${PORT:-3001}
      - AUTH_SECRET=${AUTH_SECRET}
      - AUTH_URL=${AUTH_URL:-http://localhost:3001}
      - CRON_SERVICE_ENABLED=${CRON_SERVICE_ENABLED:-true}
      - CRON_SERVICE_FREQUENCY=${CRON_SERVICE_FREQUENCY}
      - TEMPORAL_ADDRESS=${TEMPORAL_ADDRESS:-localhost:7233}
      - TEMPORAL_NAMESPACE=${TEMPORAL_NAMESPACE:-default}
      - TASK_QUEUE=${TASK_QUEUE:-bloop-tasks}
    networks:
      - dev-network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  temporal-worker:
    build:
      context: .
      dockerfile: docker/temporal-worker.Dockerfile
    volumes:
      - ./apps/temporal-worker:/app/apps/temporal-worker
      - ./packages/shared-types:/app/packages/shared-types
      - ./packages/database:/app/packages/database
      - /app/apps/temporal-worker/node_modules
      - /app/packages/shared-types/node_modules
      - /app/packages/database/node_modules
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
      - TEMPORAL_ADDRESS=${TEMPORAL_ADDRESS:-localhost:7233}
      - TEMPORAL_NAMESPACE=${TEMPORAL_NAMESPACE:-default}
      - TASK_QUEUE=${TASK_QUEUE:-bloop-tasks}
      - BASE_SCRAPE_URL=${BASE_SCRAPE_URL}
    networks:
      - dev-network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  postgres:
    image: postgres:17-alpine
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - redis_cache:/data
    networks:
      - dev-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_cache:

networks:
  dev-network:
    driver: bridge
