version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - ./apps/frontend:/app/apps/frontend
      - /app/apps/frontend/node_modules
      - /app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - dev-network
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    ports:
      - '3001:3001'
    volumes:
      - ./apps/backend:/app/apps/backend
      - /app/apps/backend/node_modules
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://dev_user:dev_password@postgres:5432/backend_dev
      - REDIS_URL=redis://redis:6379
      - BASE_SCRAPE_URL=https://www.freeomovie.to/category/full-movie/
      - HOST=localhost
      - PORT=3001
      - AUTH_SECRET=fallback-secret-key
    networks:
      - dev-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
  postgres:
    image: postgres:16-alpine
    container_name: backend-postgres
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=backend_dev
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U dev_user -d backend_dev']
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: backend-redis
    ports:
      - '6379:6379'
    networks:
      - dev-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  postgres_data:

networks:
  dev-network:
    driver: bridge
